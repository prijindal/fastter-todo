on: push

name: Flutter

permissions:
  contents: write

jobs:
  test-linux:
    runs-on: ubuntu-22.04 # libwebkit2gtk-4.1 is not compatible with flutter
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable" # or: 'beta', 'dev' or 'master'
          architecture: x64 # optional, x64 or arm64
          cache: true
          cache-key: 'flutter-${{ github.job }}-:os:-:channel:-:version:-:arch:-:hash:'
          cache-path: '${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:'
      - run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev libwebkit2gtk-4.0-dev
      
      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            build
            ~/.gradle
          key: ${{ runner.os }}-flutter-${{ github.job }}-${{ hashFiles('pubspec.lock') }}
      
      - run: flutter --version
      - run: flutter pub get
      - run: flutter analyze
      # - run: flutter test --coverage
      - name: Run Integration Tests
        uses: coactions/setup-xvfb@v1
        with:
          run: flutter test integration_test -d linux -r github --coverage
      - uses: codecov/codecov-action@v5
        with:
          flags: linux
        env: 
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}


  android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable" # or: 'beta', 'dev' or 'master'
          architecture: x64 # optional, x64 or arm64
          cache: true
          cache-key: 'flutter-${{ github.job }}-:os:-:channel:-:version:-:arch:-:hash:'
          cache-path: '${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:'
      - uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17"
      
      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            build/
            android/.gradle/
          key: ${{ runner.os }}-flutter-${{ github.job }}-${{ hashFiles('**/*.gradle*', 'pubspec.lock') }}
      - run: flutter pub global activate flutterfire_cli
      - run: flutter pub get
      - name: save release key
        env:
          KEY_FILE_BASE64: ${{ secrets.KEY_FILE_BASE64 }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          echo "$KEY_FILE_BASE64" | base64 -d > "$(pwd)/release.keystore"
          echo "storeFile=$(pwd)/release.keystore" >> android/key.properties
          echo "keyAlias=$KEY_ALIAS" >> android/key.properties
          echo "keyPassword=$KEY_PASSWORD" >> android/key.properties
          echo "storePassword=$KEY_PASSWORD" >> android/key.properties
          echo "VERSION_CODE=`expr 185 + $GITHUB_RUN_NUMBER`" > android/version.properties

      - run: curl -sL https://firebase.tools | bash
      - run: echo "$FIREBASE_SERVICE_ACCOUNT_FASTTER_TODO_PRIJINDAL" > google-application-credentials.json
        env:
          FIREBASE_SERVICE_ACCOUNT_FASTTER_TODO_PRIJINDAL: ${{secrets.FIREBASE_SERVICE_ACCOUNT_FASTTER_TODO_PRIJINDAL}}
      - run: rm lib/firebase_options.dart
      - run: flutterfire configure -y --platforms=android --ios-bundle-id=com.prijindal.fastterTodo --macos-bundle-id=com.prijindal.fastterTodo --web-app-id=1:986771470665:web:7c4efac824caf0c8248298 --android-package-name=com.prijindal.fastter_todo --windows-app-id=1:986771470665:web:b13cc73f22fe39ff248298
        env:
          GOOGLE_APPLICATION_CREDENTIALS: google-application-credentials.json
      - run: flutter build apk --release --split-per-abi
      - uses: actions/upload-artifact@v4
        with:
          name: android-arm64-v8a
          path: build/app/outputs/apk/release/app-arm64-v8a-release.apk
      - uses: actions/upload-artifact@v4
        with:
          name: android-armeabi-v7a
          path: build/app/outputs/apk/release/app-armeabi-v7a-release.apk
      - uses: actions/upload-artifact@v4
        with:
          name: android-x86_64
          path: build/app/outputs/apk/release/app-x86_64-release.apk
      - run: echo "VERSION_CODE=`expr 185 + $GITHUB_RUN_NUMBER`" > android/version.properties
      - run: flutter build appbundle --release
      - uses: actions/upload-artifact@v4
        with:
          name: android-appbundle
          path: |
            build/app/outputs/bundle/release/
            build/app/outputs/mapping/release/
            build/app/intermediates/merged_native_libs/release/out/lib/

  android-publish:
    needs: [test-linux, android]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Download appbundle from android build
        uses: actions/download-artifact@v4
        with:
          name: android-appbundle
          path: build/app/
      - name: Upload to google play
        uses: r0adkll/upload-google-play@v1
        with:
          releaseFiles: build/app/outputs/bundle/release/app-release.aab
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          packageName: com.prijindal.fastter_todo
          track: beta
          status: completed
          debugSymbols: build/app/intermediates/merged_native_libs/release/out/lib/
          mappingFile: build/app/outputs/mapping/release/mapping.txt

  web:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable" # or: 'beta', 'dev' or 'master'
          architecture: x64 # optional, x64 or arm64
          cache: true
          cache-key: 'flutter-${{ github.job }}-:os:-:channel:-:version:-:arch:-:hash:'
          cache-path: '${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:'
      
      - name: Cache
        uses: actions/cache@v4
        with:
          path: build/
          key: ${{ runner.os }}-flutter-${{ github.job }}-${{ hashFiles('pubspec.lock') }}
      
      - run: flutter pub global activate flutterfire_cli
      - run: flutter pub get
      - run: curl -sL https://firebase.tools | bash
      - run: echo "$FIREBASE_SERVICE_ACCOUNT_FASTTER_TODO_PRIJINDAL" > google-application-credentials.json
        env:
          FIREBASE_SERVICE_ACCOUNT_FASTTER_TODO_PRIJINDAL: ${{secrets.FIREBASE_SERVICE_ACCOUNT_FASTTER_TODO_PRIJINDAL}}
      - run: rm lib/firebase_options.dart
      - run: flutterfire configure -y --platforms=web --ios-bundle-id=com.prijindal.fastterTodo --macos-bundle-id=com.prijindal.fastterTodo --web-app-id=1:986771470665:web:7c4efac824caf0c8248298 --android-package-name=com.prijindal.fastter_todo --windows-app-id=1:986771470665:web:b13cc73f22fe39ff248298
        env:
          GOOGLE_APPLICATION_CREDENTIALS: google-application-credentials.json
      - run: flutter build web --release
      - uses: actions/upload-artifact@v4
        with:
          name: web
          path: build/web

  web-publish:
    needs: [test-linux, web]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - name: Download web build from linux build
        uses: actions/download-artifact@v4
        with:
          name: web
          path: build/web/
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_FASTTER_TODO_PRIJINDAL }}'
          channelId: live
          projectId: fastter-todo-prijindal
          
  linux:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable" # or: 'beta', 'dev' or 'master'
          architecture: x64 # optional, x64 or arm64
          cache: true
          cache-key: 'flutter-${{ github.job }}-:os:-:channel:-:version:-:arch:-:hash:'
          cache-path: '${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:'
      - run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev libwebkit2gtk-4.0-dev
      
      - name: Cache
        uses: actions/cache@v4
        with:
          path: build/
          key: ${{ runner.os }}-flutter-${{ github.job }}-${{ hashFiles('pubspec.lock') }}
      
      - run: flutter pub get
      - run: flutter build linux --release
      - uses: actions/upload-artifact@v4
        with:
          name: linux
          path: build/linux/x64/release/bundle
    
  macos:
    runs-on: macos-latest
    # Skipping macos since we are not releasing
    if: github.ref == 'refs/heads/**macos**'
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable" # or: 'beta', 'dev' or 'master'
          architecture: x64 # optional, x64 or arm64
          cache: true
          cache-key: 'flutter-${{ github.job }}-:os:-:channel:-:version:-:arch:-:hash:'
          cache-path: '${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:'
      
      - name: Cache
        uses: actions/cache@v4
        with:
          path: build/
          key: ${{ runner.os }}-flutter-${{ github.job }}-${{ hashFiles('pubspec.lock') }}
      
      - run: flutter pub global activate flutterfire_cli
      - run: flutter pub get
      - run: curl -sL https://firebase.tools | bash
      - run: echo "$FIREBASE_SERVICE_ACCOUNT_FASTTER_TODO_PRIJINDAL" > google-application-credentials.json
        env:
          FIREBASE_SERVICE_ACCOUNT_FASTTER_TODO_PRIJINDAL: ${{secrets.FIREBASE_SERVICE_ACCOUNT_FASTTER_TODO_PRIJINDAL}}
      - run: rm lib/firebase_options.dart
      - run: flutterfire configure -y --platforms=macos --ios-bundle-id=com.prijindal.fastterTodo --macos-bundle-id=com.prijindal.fastterTodo --web-app-id=1:986771470665:web:7c4efac824caf0c8248298 --android-package-name=com.prijindal.fastter_todo --windows-app-id=1:986771470665:web:b13cc73f22fe39ff248298
        env:
          GOOGLE_APPLICATION_CREDENTIALS: google-application-credentials.json
      - run: flutter build macos --release
      - uses: actions/upload-artifact@v4
        with:
          name: macos
          path: build/macos/Build/Products/Release

  ios:
    runs-on: macos-latest
    # Skipping ios since we are not releasing
    if: github.ref == 'refs/heads/**ios**'
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable" # or: 'beta', 'dev' or 'master'
          architecture: x64 # optional, x64 or arm64
          cache: true
          cache-key: 'flutter-${{ github.job }}-:os:-:channel:-:version:-:arch:-:hash:'
          cache-path: '${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:'
      
      - name: Cache
        uses: actions/cache@v4
        with:
          path: build/
          key: ${{ runner.os }}-flutter-${{ github.job }}-${{ hashFiles('pubspec.lock') }}
      
      - run: flutter pub global activate flutterfire_cli
      - run: flutter pub get
      - run: curl -sL https://firebase.tools | bash
      - run: echo "$FIREBASE_SERVICE_ACCOUNT_FASTTER_TODO_PRIJINDAL" > google-application-credentials.json
        env:
          FIREBASE_SERVICE_ACCOUNT_FASTTER_TODO_PRIJINDAL: ${{secrets.FIREBASE_SERVICE_ACCOUNT_FASTTER_TODO_PRIJINDAL}}
      - run: rm lib/firebase_options.dart
      - run: flutterfire configure -y --platforms=ios --ios-bundle-id=com.prijindal.fastterTodo --macos-bundle-id=com.prijindal.fastterTodo --web-app-id=1:986771470665:web:7c4efac824caf0c8248298 --android-package-name=com.prijindal.fastter_todo --windows-app-id=1:986771470665:web:b13cc73f22fe39ff248298
        env:
          GOOGLE_APPLICATION_CREDENTIALS: google-application-credentials.json
      - run: flutter build ios --release --no-codesign --release
      - uses: actions/upload-artifact@v4
        with:
          name: ios
          path: build/ios

  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable" # or: 'beta', 'dev' or 'master'
          architecture: x64 # optional, x64 or arm64
          cache: true
          cache-key: 'flutter-${{ github.job }}-:os:-:channel:-:version:-:arch:-:hash:'
          cache-path: '${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:'
      
      - name: Cache
        uses: actions/cache@v4
        with:
          path: build/
          key: ${{ runner.os }}-flutter-${{ github.job }}-${{ hashFiles('pubspec.lock') }}
      
      - run: flutter pub global activate flutterfire_cli
      - run: flutter pub get
      - run: npm install -g firebase-tools
      - run: echo "$FIREBASE_SERVICE_ACCOUNT_FASTTER_TODO_PRIJINDAL" > google-application-credentials.json
        shell: bash
        env:
          FIREBASE_SERVICE_ACCOUNT_FASTTER_TODO_PRIJINDAL: ${{secrets.FIREBASE_SERVICE_ACCOUNT_FASTTER_TODO_PRIJINDAL}}
      - run: rm lib/firebase_options.dart
      - run: flutterfire configure -y --platforms=windows --ios-bundle-id=com.prijindal.fastterTodo --macos-bundle-id=com.prijindal.fastterTodo --web-app-id=1:986771470665:web:7c4efac824caf0c8248298 --android-package-name=com.prijindal.fastter_todo --windows-app-id=1:986771470665:web:b13cc73f22fe39ff248298
        env:
          GOOGLE_APPLICATION_CREDENTIALS: google-application-credentials.json
      - run: dart run msix:create
      - uses: actions/upload-artifact@v4
        with:
          name: windows
          path: build/windows/x64/runner/Release/fastter_todo.msix
